<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ScrollBarButtonBase" TargetType="{x:Type RepeatButton}">
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualStateGroup.Transitions>
                					<VisualTransition GeneratedDuration="0:0:0.2"/>
                				</VisualStateGroup.Transitions>
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderHover">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Pressed">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderPressed">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderNormal">
                							<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Border x:Name="BorderNormal"
                			Background="{TemplateBinding Background}"
                			BorderBrush="{TemplateBinding BorderBrush}"
                			BorderThickness="{TemplateBinding BorderThickness}"
                			CornerRadius="1">
                			<Path HorizontalAlignment="Center"
                				VerticalAlignment="Center"
                				Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                				Fill="{TemplateBinding BorderBrush}"/>
                		</Border>
                		<Border x:Name="BorderHover"
                			Background="{StaticResource ButtonHoverBackground}"
                			BorderBrush="{StaticResource ButtonHoverBorder}"
                			BorderThickness="{TemplateBinding BorderThickness}"
                			CornerRadius="1"
                			Opacity="0">
                			<Path HorizontalAlignment="Center"
                				VerticalAlignment="Center"
                				Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                				Fill="{StaticResource ButtonHoverBorder}"/>
                		</Border>
                		<Border x:Name="BorderPressed"
                			Background="{StaticResource ButtonPressedBackground}"
                			BorderBrush="{StaticResource ButtonPressedBorder}"
                			BorderThickness="{TemplateBinding BorderThickness}"
                			CornerRadius="1"
                			Opacity="0">
                			<Grid>
                				<Border Background="{StaticResource ButtonPressedEffect}"/>
                				<Path HorizontalAlignment="Center"
	                				  VerticalAlignment="Center"
                					  Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                					  Fill="{StaticResource ButtonPressedBorder}"/>
							</Grid>
                		</Border>
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarTrack" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarDrag" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
					<Grid>
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualStateGroup.Transitions>
                					<VisualTransition GeneratedDuration="0:0:0.2"/>
                				</VisualStateGroup.Transitions>
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderHover">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Pressed">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderPressed">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderNormal">
                							<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Border x:Name="BorderNormal"
                			Background="{TemplateBinding Background}"
                			BorderBrush="{TemplateBinding BorderBrush}"
                			BorderThickness="{TemplateBinding BorderThickness}"
                			Margin="{TemplateBinding Padding}"
                			CornerRadius="1"/>
                		<Border x:Name="BorderHover"
                			Background="{StaticResource ButtonHoverBackground}"
                			BorderBrush="{StaticResource ButtonHoverBorder}"
                			BorderThickness="{TemplateBinding BorderThickness}"
                			Margin="{TemplateBinding Padding}"
                			CornerRadius="1"
                			Opacity="0"/>
                		<Border x:Name="BorderPressed"
                			Background="{StaticResource ButtonPressedBackground}"
                			BorderBrush="{StaticResource ButtonPressedBorder}"
                			BorderThickness="{TemplateBinding BorderThickness}"
                			Margin="{TemplateBinding Padding}"
                			CornerRadius="1"
                			Opacity="0">
                			<Border Background="{StaticResource ButtonPressedEffect}"/>
						</Border>
                		<StackPanel Width="6" HorizontalAlignment="Center" VerticalAlignment="Center">
                			<Rectangle Height="1" Margin="0,0.5" Fill="{StaticResource ButtonNormalBorder}" SnapsToDevicePixels="True"/>
                			<Rectangle Height="1" Margin="0,0.5" Fill="{StaticResource ButtonNormalBorder}" SnapsToDevicePixels="True"/>
                			<Rectangle Height="1" Margin="0,0.5" Fill="{StaticResource ButtonNormalBorder}" SnapsToDevicePixels="True"/>
                		</StackPanel>
                	</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonHoverBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonHoverBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid Background="{StaticResource PaneBackground}">
            <Grid.RowDefinitions>
                <RowDefinition Height="16"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="16"/>
            </Grid.RowDefinitions>
            <Border BorderBrush="{StaticResource ScrollbarTrayBorder}"
                    BorderThickness="1"
                    CornerRadius="1"
                    Grid.RowSpan="3"/>
            <RepeatButton Content="M 0 4 L 8 4 L 4 0 Z"
                          Command="ScrollBar.LineUpCommand"
                          Style="{StaticResource ScrollBarButtonBase}"/>
            <RepeatButton Content="M 0 0 L 4 4 L 8 0 Z"
                          Command="ScrollBar.LineDownCommand"
                          Style="{StaticResource ScrollBarButtonBase}"
                          Grid.Row="2"/>
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarTrack}" Command="ScrollBar.PageUpCommand"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarDrag}" Padding="0 1"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarTrack}" Command="ScrollBar.PageDownCommand"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid Background="{StaticResource PaneBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="16"/>
            </Grid.ColumnDefinitions>
            <Border BorderBrush="{StaticResource ScrollbarTrayBorder}"
                    BorderThickness="1"
                    CornerRadius="2"
                    Grid.ColumnSpan="3"/>
            <RepeatButton Content="M 4 0 L 4 8 L 0 4 Z"
                          Command="ScrollBar.LineLeftCommand"
                          Style="{StaticResource ScrollBarButtonBase}"/>
            <RepeatButton Content="M 0 0 L 4 4 L 0 8 Z"
                          Command="ScrollBar.LineRightCommand"
                          Style="{StaticResource ScrollBarButtonBase}"
                          Grid.Column="2"/>
            <Track Name="PART_Track" Grid.Column="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarTrack}" Command="ScrollBar.PageLeftCommand"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarDrag}" Padding="1 0"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarTrack}" Command="ScrollBar.PageRightCommand"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>

    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBarTemplate}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalScrollBarTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>